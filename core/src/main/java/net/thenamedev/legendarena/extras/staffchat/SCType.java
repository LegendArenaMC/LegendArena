package net.thenamedev.legendarena.extras.staffchat;import org.jetbrains.annotations.*;import java.util.*;/** * @author TheNameMan */public enum SCType {    /**     * Admin staff chat     * Use the GM chat.     */    @Deprecated    ADMIN,    /**     * GM (Game Master) staff chat     */    GM,    /**     * Moderator staff chat     */    MOD,    /**     * General staff chat     */    STAFF,    /**     * "Backend" notifications staff chat     */    NOTIFICATION,    /**     * Global broadcast system for mods and up. Essentially a notifications system like /say, but doesn't requre a command to be run every message to broadcast.     */    ALERT,    /**     * VIP channel     */    VIP,    /**     * Helper staff channel     */    HELPER,    /**     * Public chat. (this is really used only internally)     */    PUBLIC;    @NotNull    @Deprecated    volatile static List<UUID> admin = new ArrayList<>();    @NotNull    volatile static List<UUID> gm = new ArrayList<>();    @NotNull    volatile static List<UUID> mod = new ArrayList<>();    @NotNull    volatile static List<UUID> notify = new ArrayList<>();    @NotNull    volatile static List<UUID> vip = new ArrayList<>();    @NotNull    volatile static List<UUID> staff = new ArrayList<>();    @NotNull    volatile static List<UUID> helper = new ArrayList<>();    @NotNull    volatile static List<UUID> alert = new ArrayList<>();    @NotNull    volatile static List<UUID> noStaffchat = new ArrayList<>();    public static void setCanSeeStaffchat(UUID p, boolean canSee) {        if(!canSee) {            noStaffchat.add(p);        } else {            noStaffchat.remove(p);        }    }    public static boolean canSeeStaffchat(UUID p) {        return !noStaffchat.contains(p);    }    public static boolean hasStaffchat(UUID p, SCType type) {        return type == ADMIN && admin.contains(p) ||                type == GM && gm.contains(p) ||                type == MOD && mod.contains(p) ||                type == STAFF && staff.contains(p) ||                type == ALERT && alert.contains(p) ||                type == VIP && vip.contains(p) ||                type == NOTIFICATION && notify.contains(p) ||                type == HELPER && helper.contains(p);    }    @NotNull    public static SCType getType(UUID p) {        if(admin.contains(p)) return ADMIN;        else if(gm.contains(p)) return GM;        else if(notify.contains(p)) return NOTIFICATION;        else if(mod.contains(p)) return MOD;        else if(alert.contains(p)) return ALERT;        else if(staff.contains(p)) return STAFF;        else if(helper.contains(p)) return HELPER;        else if(vip.contains(p)) return VIP;        else return PUBLIC;    }    public static void addUser(UUID p, SCType type) {        if(type == NOTIFICATION) {            clearStaffchat(p);            notify.add(p);        } else if(type == ADMIN) {            clearStaffchat(p);            admin.add(p);        } else if(type == GM) {            clearStaffchat(p);            gm.add(p);        } else if(type == HELPER) {            clearStaffchat(p);            helper.add(p);        } else if(type == MOD) {            clearStaffchat(p);            mod.add(p);        } else if(type == STAFF) {            clearStaffchat(p);            staff.add(p);        } else if(type == ALERT) {            clearStaffchat(p);            alert.add(p);        } else if(type == VIP) {            clearStaffchat(p);            vip.add(p);        }    }    /**     * Clears ALL channels. Only use this when required or disabling the plugin.     */    public static void clearStaffchatTypes() {        staff.clear(); //clear the STAFF channel player list        admin.clear(); //clear the ADMIN channel player list        gm.clear(); //clear the GM channel player list        alert.clear(); //clear the ALERT channel player list        mod.clear(); //clear the MOD channel player list        vip.clear(); //clear the VIP channel player list        notify.clear(); //clear the NOTIFY channel player list        helper.clear(); //clear the HELPER channel player list    }    /**     * Removes a player from all staff chat channels.     * @param p The player to target (in UUID form; use getUniqueID() (from the Player class) to get a player's UUID)     */    public static void clearStaffchat(UUID p) {        if(staff.contains(p)) staff.remove(p); //remove them from the channel "staff"        if(admin.contains(p)) admin.remove(p); //remove them from the channel "admin"        if(gm.contains(p)) gm.remove(p); //remove them from the channel "admin"        if(alert.contains(p)) alert.remove(p); //remove them from the channel "alert"        if(mod.contains(p)) mod.remove(p); //remove them from the channel "mod"        if(helper.contains(p)) helper.remove(p); //remove them from the channel "helper"        if(notify.contains(p)) notify.remove(p); //remove them from the channel "notify"        if(vip.contains(p)) vip.remove(p); //remove them from the channel "vip"    }}