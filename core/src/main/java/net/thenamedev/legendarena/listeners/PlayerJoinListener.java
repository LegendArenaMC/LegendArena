package net.thenamedev.legendarena.listeners;import com.connorlinfoot.titleapi.*;import net.thenamedev.legendarena.core.*;import net.thenamedev.legendarena.extras.staffchat.*;import net.thenamedev.legendarena.utils.*;import org.bukkit.*;import org.bukkit.entity.*;import org.bukkit.event.*;import org.bukkit.event.player.*;import org.bukkit.event.player.PlayerLoginEvent.*;import org.jetbrains.annotations.*;/** * @author TheNameMan */public class PlayerJoinListener implements Listener {    @EventHandler(priority = EventPriority.HIGHEST)    public void playerJoin(@NotNull PlayerJoinEvent ev) {        if(LegendArena.debugSwitch) {            ChatUtils.broadcast(ChatColor.RED + "DEBUG MODE IS ON! THIS SETTING SHOULD NOT BE TRUE IN PRODUCTION! If this is production, DISABLE THE PLUGIN, FIX IT, AND RE-ENABLE IT AFTER THE NEW JAR IS ADDED.", Rank.Dev);        }        ev.setJoinMessage(ChatColor.GRAY + "[" + ChatColor.GREEN + "+" + ChatColor.GRAY + "] " + Rank.getFormattedName(ev.getPlayer()));        if(!ev.getPlayer().hasPlayedBefore()) {            ChatUtils.shootFireworks(ev.getPlayer());            ChatUtils.shootFireworks(ev.getPlayer());        }        if(!ev.getPlayer().hasPlayedBefore() || LegendArena.debugSwitch)            TitleAPI.sendTitle(ev.getPlayer(), 10, 40, 10, "§cWelcome to Legend Arena,", "§3%player%");        TitleAPI.sendTabTitle(ev.getPlayer(), ChatColor.DARK_GREEN + "Legend Arena", ChatColor.GREEN + "IP: " + ChatColor.DARK_PURPLE + "la.thenamedev.net");        if(NoticeUtils.isCloseToBFTN())            ev.getPlayer().sendRawMessage(ChatColor.DARK_RED + "Big cable companies want to slow down the internet. Help us stop them: https://www.battleforthenet.com/");        ScoreboardUtils.addPlayerToTeam(Rank.getScoreboardTeam(ev.getPlayer()), ev.getPlayer());    }    @EventHandler(priority = EventPriority.HIGH)    public void playerLeave(@NotNull PlayerQuitEvent ev) {        ev.setQuitMessage(ChatColor.GRAY + "[" + ChatColor.RED + "-" + ChatColor.GRAY + "] " + Rank.getFormattedName(ev.getPlayer()));        SCType.clearStaffchat(ev.getPlayer().getUniqueId());    }    @EventHandler(priority = EventPriority.HIGHEST)    public void playerLogin(@NotNull PlayerLoginEvent ev) {        Player p = ev.getPlayer();        if(ev.getPlayer().getName().contains(" ")) {            ev.disallow(Result.KICK_OTHER, "Invalid username. (try changing your name to something without a space?)"); //filter them out due to their name having a space in it, to keep them from bypassing commands (somehow)            StaffChat.notice(ChatColor.RED + "Player \"" + p.getName() + "\" tried to join with an invalid name (space in name).", "Join Filter"); //let online staff now that it was filtered        }    }}