package net.thenamedev.legendarena.extras.staffchat;import net.thenamedev.legendapi.LegendAPI;import net.thenamedev.legendapi.exceptions.MistakesWereMadeException;import net.thenamedev.legendapi.utils.ChatUtils;import net.thenamedev.legendapi.utils.LogUtils;import net.thenamedev.legendapi.utils.PluginUtils;import net.thenamedev.legendapi.utils.Rank;import org.bukkit.Bukkit;import org.bukkit.ChatColor;import org.bukkit.entity.Player;import org.bukkit.event.EventHandler;import org.bukkit.event.EventPriority;import org.bukkit.event.Listener;import org.bukkit.event.player.AsyncPlayerChatEvent;/** * @author ThePixelDev */public class StaffChat implements Listener {    @EventHandler(priority = EventPriority.LOWEST)    public void playerChat(AsyncPlayerChatEvent ev) {        if(SCType.getType(ev.getPlayer().getUniqueId()) != SCType.PUBLIC) {            try {                staffChat(SCType.getType(ev.getPlayer().getUniqueId()), ev.getPlayer(), ChatColor.translateAlternateColorCodes('&', ev.getMessage()));            } catch(NullPointerException ex) {                for(Player p : Bukkit.getOnlinePlayers()) {                    if(!Rank.getRank(p, Rank.Helper)) {                        continue;                    }                    p.sendMessage(LegendAPI.debugCat);                    p.sendMessage("The player " + ev.getPlayer().getName() + " has their channel set to an invalid channel, causing the staffChat() method to throw an NPE. Please report this to Pixel!");                    if(LegendAPI.debug) {                        p.sendMessage("Debug info:");                        p.sendMessage("Channel: " + SCType.getType(ev.getPlayer().getUniqueId()));                        p.sendMessage("");                    }                }                SCType.clearStaffchat(ev.getPlayer().getUniqueId()); //of course - this isn't failproof, but hopefully it will work            } finally {                ev.setCancelled(true); //finally set the event to be cancelled regardless of if the type was found in the staff chat method or not            }        }    }    public static void staffChat(SCType type, Player p, String msg) {        if(type == SCType.ALERT) {            if(!Rank.getRank(p, Rank.Helper)) {                p.sendMessage(ChatColor.DARK_RED + "Why are you in the alert channel?");                SCType.clearStaffchat(p.getUniqueId());                return;            }            alert(msg, p); //Redirect to Alert method        } else if(type == SCType.NOTIFICATION) {            if(!Rank.getRank(p, Rank.Dev)) {                p.sendMessage(ChatColor.DARK_RED + "Why are you in the notification channel?");                SCType.clearStaffchat(p.getUniqueId());                return;            }            notice(msg, "Staff Notice"); //Redirect to Notify method [recently added support for this, by the way]        } else if(type == SCType.GM) {            for(Player pl : Bukkit.getOnlinePlayers()) {                if(!Rank.getRank(pl, Rank.GM) || SCType.noStaffchat.contains(pl.getUniqueId()))                    continue; //Continue along the players if the user is not an admin or chose to not show staff chat                pl.sendMessage(ChatColor.GREEN + "(" + ChatColor.YELLOW + "GM Chat" + ChatColor.GREEN + ") " + ChatUtils.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + ChatColor.RED + " " + msg);            }        } else if(type == SCType.MOD) {            for(Player pl : Bukkit.getOnlinePlayers()) {                if(!Rank.getRank(pl, Rank.Mod) || SCType.noStaffchat.contains(pl.getUniqueId()))                    continue; //Continue along the players if the user is not a moderator or chose to not show staff chat                pl.sendMessage(ChatColor.BLUE + "(" + ChatColor.DARK_GREEN + "Mod Chat" + ChatColor.BLUE + ") " + ChatUtils.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + ChatColor.LIGHT_PURPLE + " " + msg);            }        } else if(type == SCType.STAFF) {            for(Player pl : Bukkit.getOnlinePlayers()) {                if(!Rank.getRank(pl, Rank.Helper) || SCType.noStaffchat.contains(pl.getUniqueId()))                    continue; //Continue along the players if the user is not a moderator or chose to not show staff chat                pl.sendMessage(ChatColor.BLUE + "(" + ChatColor.DARK_PURPLE + "Staff Chat" + ChatColor.BLUE + ") " + ChatUtils.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + ChatColor.YELLOW + " " + msg);            }        } else if(type == SCType.HELPER) {            for(Player pl : Bukkit.getOnlinePlayers()) {                if(!Rank.getRank(pl, Rank.Helper) || SCType.noStaffchat.contains(pl.getUniqueId()))                    continue; //Continue along the players if the user is not a moderator or chose to not show staff chat                pl.sendMessage(ChatColor.GREEN + "(" + ChatColor.BLUE + "Helper Chat" + ChatColor.GREEN + ") " + ChatUtils.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + ChatColor.GOLD + " " + msg);            }        } else if(type == SCType.VIP) {            for(Player pl : Bukkit.getOnlinePlayers()) {                if(!Rank.getRank(pl, Rank.VIP) || SCType.noStaffchat.contains(pl.getUniqueId()))                    continue; //Continue along the players if the user is not a VIP or chose to not show staff chat                pl.sendMessage(ChatColor.BLUE + "(" + ChatColor.GREEN + "VIP Chat" + ChatColor.BLUE + ") " + ChatUtils.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + ChatColor.YELLOW + " " + msg);            }        } else {            throw new NullPointerException();        }    }    private static void alert(String msg, Player p) {        if(ChatColor.stripColor(msg).equals("")) return;        for(Player pl : Bukkit.getOnlinePlayers()) {            pl.sendMessage(ChatColor.RED + "(Notice) " + ChatColor.BLUE + Rank.getRank(p) + ChatColor.GRAY + " | " + Rank.getFormattedName(p) + " " + ChatColor.GRAY + PluginUtils.chars[1] + " " + ChatColor.YELLOW + ChatColor.translateAlternateColorCodes('&', msg));        }    }    public static void notice(String msg, String notifyType) {        if(msg.equals("") || notifyType.equals("")) throw new MistakesWereMadeException("Notify type or message cannot be blank.");        for(Player pl : Bukkit.getOnlinePlayers()) {            if(!Rank.getRank(pl, Rank.Helper)) continue;            pl.sendMessage(ChatColor.LIGHT_PURPLE + "(Notification) " + ChatColor.RED + notifyType + ChatColor.GRAY + " " + PluginUtils.chars[1] + ChatColor.LIGHT_PURPLE + " " + msg);        }    }}