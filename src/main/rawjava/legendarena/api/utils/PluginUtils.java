/* * This plugin is copyright Legend Arena, 2014-current. See LICENSE.md for full license file. */package legendarena.api.utils;import org.bukkit.Color;import org.bukkit.FireworkEffect;import org.bukkit.Location;import org.bukkit.command.CommandSender;import org.bukkit.entity.*;import org.bukkit.inventory.meta.FireworkMeta;import java.util.Random;/** * Various random plugin utilities that have no other home. * * @author ThePixelDev */public class PluginUtils {    protected static final Color[] colors = {            Color.YELLOW,            Color.WHITE,            Color.TEAL,            Color.SILVER,            Color.RED,            Color.PURPLE,            Color.ORANGE,            Color.OLIVE,            Color.NAVY,            Color.MAROON,            Color.LIME,            Color.GREEN,            Color.GRAY,            Color.FUCHSIA,            Color.BLUE,            Color.BLACK,            Color.AQUA    };    public static Entity spawn(EntityType e, Location l) {        return l.getWorld().spawnEntity(l, e);    }    public static void shootFireworks(CommandSender sender) {        if(!(sender instanceof Player))            return;        Random r = new Random();        Player p = (Player) sender;        Firework fw = (Firework) spawn(EntityType.FIREWORK, p.getLocation());        FireworkMeta fm = fw.getFireworkMeta();        fm.addEffect(FireworkEffect                .builder()                .flicker(r.nextBoolean())                .withColor(getColour(r.nextInt(17) + 1))                .withFade(getColour(r.nextInt(17) + 1))                .with(getFireworkType())                .trail(r.nextBoolean())                .build());        fm.setPower(r.nextInt(2) + 1);        fw.setFireworkMeta(fm);    }    private static FireworkEffect.Type getFireworkType() {        Random r = new Random();        FireworkEffect.Type type;        switch(r.nextInt(5) + 1) {            default:            case 1:                type = FireworkEffect.Type.BALL;                break;            case 2:                type = FireworkEffect.Type.STAR;                break;            case 3:                type = FireworkEffect.Type.BALL_LARGE;                break;            case 4:                type = FireworkEffect.Type.CREEPER;                break;            case 5:                type = FireworkEffect.Type.BURST;        }        return type;    }    private static Color getColour(int c) {        return colors[c - 1];    }}